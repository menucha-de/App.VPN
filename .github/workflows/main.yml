name: Build app

on:
  workflow_dispatch:
    inputs:
      arch:
        description: 'Architecture'
        default: 'amd64 armhf'
      dist:
        description: 'Distribution'
        default: 'buster'
        required: true
      packaging:
        description: 'Packaging'
      imaging:
        description: 'Imaging'      
      maintainer:
        description: 'Maintainer'
        default: "Menucha Team <info@menucha.de>"
        required: true
      support:
        description: 'Support'
        default: "info@menucha.de"
        required: true
      tags:
        description: 'Tags'
        default: 'ghcr.io/menucha-de/vpn:latest'
        required: true
      platforms:
        description: 'Platforms'
        default: 'linux/amd64,linux/arm/v7'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: ${{ github.event.inputs.imaging }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        if: ${{ github.event.inputs.imaging }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        if: ${{ github.event.inputs.imaging }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.ACTIONS }}
      - name: Build
        id: build
        uses: menucha-de/actions/build@v1
        with:
          arch: ${{ github.event.inputs.arch }}
          dist: ${{ github.event.inputs.dist }}
          script: ./mkapp
          token: ${{ secrets.ACTIONS }}
          packaging: ${{ github.event.inputs.packaging }}
          imaging: ${{ github.event.inputs.imaging }}
          maintainer: ${{ github.event.inputs.maintainer }}
          support: ${{ github.event.inputs.support }}
      - name: Build and push
        uses: docker/build-push-action@v2
        if: ${{ github.event.inputs.imaging }}
        with:
          context: .
          tags: ${{ github.event.inputs.tags }}
          platforms: ${{ github.event.inputs.platforms }}
          push: true
